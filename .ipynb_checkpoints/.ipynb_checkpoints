{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "9aaba845",
   "metadata": {},
   "source": [
    "# importing libraries and dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "250df60d",
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f4a98d3f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_at</th>\n",
       "      <th>source</th>\n",
       "      <th>text</th>\n",
       "      <th>polarity</th>\n",
       "      <th>subjectivity</th>\n",
       "      <th>lang</th>\n",
       "      <th>fav_count</th>\n",
       "      <th>retweet_count</th>\n",
       "      <th>screen_name</th>\n",
       "      <th>follower_count</th>\n",
       "      <th>friends_count</th>\n",
       "      <th>sensitivity</th>\n",
       "      <th>hashtags</th>\n",
       "      <th>mentions</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Fri Apr 22 22:20:18 +0000 2022</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @nikitheblogger: Irre: Annalena Baerbock sa...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>de</td>\n",
       "      <td>113</td>\n",
       "      <td>355</td>\n",
       "      <td>nikitheblogger</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'nikitheblogger', 'name': 'Ne...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Fri Apr 22 22:19:16 +0000 2022</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @sagt_mit: Merkel schaffte es in 1 Jahr 1 M...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>de</td>\n",
       "      <td>113</td>\n",
       "      <td>505</td>\n",
       "      <td>sagt_mit</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'sagt_mit', 'name': 'Sie sagt...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Fri Apr 22 22:17:28 +0000 2022</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @Kryptonoun: @WRi007 Pharma in Lebensmittel...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>de</td>\n",
       "      <td>113</td>\n",
       "      <td>4</td>\n",
       "      <td>Kryptonoun</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'Kryptonoun', 'name': 'Krypto...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Fri Apr 22 22:17:20 +0000 2022</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @WRi007: Die #Deutschen sind ein braves Vol...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>de</td>\n",
       "      <td>113</td>\n",
       "      <td>332</td>\n",
       "      <td>WRi007</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>[{'text': 'Deutschen', 'indices': [16, 26]}, {...</td>\n",
       "      <td>[{'screen_name': 'WRi007', 'name': 'Wolfgang B...</td>\n",
       "      <td>Gnaden Vürttemberg</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Fri Apr 22 22:13:15 +0000 2022</td>\n",
       "      <td>Twitter for Android</td>\n",
       "      <td>RT @RolandTichy: Baerbock verkündet mal so neb...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>de</td>\n",
       "      <td>113</td>\n",
       "      <td>386</td>\n",
       "      <td>RolandTichy</td>\n",
       "      <td>3</td>\n",
       "      <td>12</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'RolandTichy', 'name': 'Rolan...</td>\n",
       "      <td>Deutschland</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                       created_at               source  \\\n",
       "0  Fri Apr 22 22:20:18 +0000 2022  Twitter for Android   \n",
       "1  Fri Apr 22 22:19:16 +0000 2022  Twitter for Android   \n",
       "2  Fri Apr 22 22:17:28 +0000 2022  Twitter for Android   \n",
       "3  Fri Apr 22 22:17:20 +0000 2022  Twitter for Android   \n",
       "4  Fri Apr 22 22:13:15 +0000 2022  Twitter for Android   \n",
       "\n",
       "                                                text  polarity  subjectivity  \\\n",
       "0  RT @nikitheblogger: Irre: Annalena Baerbock sa...       0.0           0.0   \n",
       "1  RT @sagt_mit: Merkel schaffte es in 1 Jahr 1 M...       0.0           0.0   \n",
       "2  RT @Kryptonoun: @WRi007 Pharma in Lebensmittel...       0.0           0.0   \n",
       "3  RT @WRi007: Die #Deutschen sind ein braves Vol...       0.0           0.0   \n",
       "4  RT @RolandTichy: Baerbock verkündet mal so neb...       0.0           0.0   \n",
       "\n",
       "  lang  fav_count  retweet_count     screen_name  follower_count  \\\n",
       "0   de        113            355  nikitheblogger               3   \n",
       "1   de        113            505        sagt_mit               3   \n",
       "2   de        113              4      Kryptonoun               3   \n",
       "3   de        113            332          WRi007               3   \n",
       "4   de        113            386     RolandTichy               3   \n",
       "\n",
       "   friends_count  sensitivity  \\\n",
       "0             12        False   \n",
       "1             12        False   \n",
       "2             12        False   \n",
       "3             12        False   \n",
       "4             12        False   \n",
       "\n",
       "                                            hashtags  \\\n",
       "0                                                 []   \n",
       "1                                                 []   \n",
       "2                                                 []   \n",
       "3  [{'text': 'Deutschen', 'indices': [16, 26]}, {...   \n",
       "4                                                 []   \n",
       "\n",
       "                                            mentions             location  \n",
       "0  [{'screen_name': 'nikitheblogger', 'name': 'Ne...                  NaN  \n",
       "1  [{'screen_name': 'sagt_mit', 'name': 'Sie sagt...                  NaN  \n",
       "2  [{'screen_name': 'Kryptonoun', 'name': 'Krypto...                  NaN  \n",
       "3  [{'screen_name': 'WRi007', 'name': 'Wolfgang B...  Gnaden Vürttemberg   \n",
       "4  [{'screen_name': 'RolandTichy', 'name': 'Rolan...          Deutschland  "
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# importing dataset\n",
    "dataset = pd.read_csv('./data/processed_tweet_data.csv')\n",
    "dataset.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "03fdffd7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>created_at</th>\n",
       "      <th>source</th>\n",
       "      <th>text</th>\n",
       "      <th>polarity</th>\n",
       "      <th>subjectivity</th>\n",
       "      <th>lang</th>\n",
       "      <th>fav_count</th>\n",
       "      <th>retweet_count</th>\n",
       "      <th>screen_name</th>\n",
       "      <th>follower_count</th>\n",
       "      <th>friends_count</th>\n",
       "      <th>sensitivity</th>\n",
       "      <th>hashtags</th>\n",
       "      <th>mentions</th>\n",
       "      <th>location</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>24620</th>\n",
       "      <td>Fri Apr 22 14:44:56 +0000 2022</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @waglenikhil: आपल्या घरातल्या कोणत्याही कार...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>mr</td>\n",
       "      <td>31392</td>\n",
       "      <td>242</td>\n",
       "      <td>waglenikhil</td>\n",
       "      <td>706</td>\n",
       "      <td>643</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'waglenikhil', 'name': 'nikhi...</td>\n",
       "      <td>nikhil.wagle23@gmail.com</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24621</th>\n",
       "      <td>Fri Apr 22 14:44:44 +0000 2022</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @yadavtejashwi: चौहरमल नगर, फुलवारी शरीफ मे...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>hi</td>\n",
       "      <td>31392</td>\n",
       "      <td>242</td>\n",
       "      <td>yadavtejashwi</td>\n",
       "      <td>706</td>\n",
       "      <td>643</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'yadavtejashwi', 'name': 'Tej...</td>\n",
       "      <td>Patna</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24622</th>\n",
       "      <td>Fri Apr 22 14:44:35 +0000 2022</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @Parthtiwari25: Gujarat Congress MLA arrest...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>en</td>\n",
       "      <td>31392</td>\n",
       "      <td>203</td>\n",
       "      <td>Parthtiwari25</td>\n",
       "      <td>706</td>\n",
       "      <td>643</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'Parthtiwari25', 'name': 'Par...</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24623</th>\n",
       "      <td>Fri Apr 22 14:44:08 +0000 2022</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @news24tvchannel: CM नीतीश कुमार ने तेजस्वी...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>hi</td>\n",
       "      <td>31392</td>\n",
       "      <td>301</td>\n",
       "      <td>news24tvchannel</td>\n",
       "      <td>706</td>\n",
       "      <td>643</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'news24tvchannel', 'name': 'N...</td>\n",
       "      <td>Noida</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24624</th>\n",
       "      <td>Fri Apr 22 14:43:01 +0000 2022</td>\n",
       "      <td>Twitter for iPhone</td>\n",
       "      <td>RT @suvegrathi: भगवान और खुदा आपस में बात कर र...</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>hi</td>\n",
       "      <td>31392</td>\n",
       "      <td>12</td>\n",
       "      <td>suvegrathi</td>\n",
       "      <td>706</td>\n",
       "      <td>643</td>\n",
       "      <td>False</td>\n",
       "      <td>[]</td>\n",
       "      <td>[{'screen_name': 'suvegrathi', 'name': 'Suveg ...</td>\n",
       "      <td>India</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                           created_at              source  \\\n",
       "24620  Fri Apr 22 14:44:56 +0000 2022  Twitter for iPhone   \n",
       "24621  Fri Apr 22 14:44:44 +0000 2022  Twitter for iPhone   \n",
       "24622  Fri Apr 22 14:44:35 +0000 2022  Twitter for iPhone   \n",
       "24623  Fri Apr 22 14:44:08 +0000 2022  Twitter for iPhone   \n",
       "24624  Fri Apr 22 14:43:01 +0000 2022  Twitter for iPhone   \n",
       "\n",
       "                                                    text  polarity  \\\n",
       "24620  RT @waglenikhil: आपल्या घरातल्या कोणत्याही कार...       0.0   \n",
       "24621  RT @yadavtejashwi: चौहरमल नगर, फुलवारी शरीफ मे...       0.0   \n",
       "24622  RT @Parthtiwari25: Gujarat Congress MLA arrest...       0.0   \n",
       "24623  RT @news24tvchannel: CM नीतीश कुमार ने तेजस्वी...       0.0   \n",
       "24624  RT @suvegrathi: भगवान और खुदा आपस में बात कर र...       0.0   \n",
       "\n",
       "       subjectivity lang  fav_count  retweet_count      screen_name  \\\n",
       "24620           0.0   mr      31392            242      waglenikhil   \n",
       "24621           0.0   hi      31392            242    yadavtejashwi   \n",
       "24622           0.0   en      31392            203    Parthtiwari25   \n",
       "24623           0.0   hi      31392            301  news24tvchannel   \n",
       "24624           0.0   hi      31392             12       suvegrathi   \n",
       "\n",
       "       follower_count  friends_count  sensitivity hashtags  \\\n",
       "24620             706            643        False       []   \n",
       "24621             706            643        False       []   \n",
       "24622             706            643        False       []   \n",
       "24623             706            643        False       []   \n",
       "24624             706            643        False       []   \n",
       "\n",
       "                                                mentions  \\\n",
       "24620  [{'screen_name': 'waglenikhil', 'name': 'nikhi...   \n",
       "24621  [{'screen_name': 'yadavtejashwi', 'name': 'Tej...   \n",
       "24622  [{'screen_name': 'Parthtiwari25', 'name': 'Par...   \n",
       "24623  [{'screen_name': 'news24tvchannel', 'name': 'N...   \n",
       "24624  [{'screen_name': 'suvegrathi', 'name': 'Suveg ...   \n",
       "\n",
       "                       location  \n",
       "24620  nikhil.wagle23@gmail.com  \n",
       "24621                     Patna  \n",
       "24622                       NaN  \n",
       "24623                     Noida  \n",
       "24624                     India  "
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "dataset.tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f4bc4ddd",
   "metadata": {},
   "source": [
    "### general data exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "f098ce2d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24625, 15)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# shape of data\n",
    "dataset.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "9cdc2bc9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['created_at', 'source', 'text', 'polarity', 'subjectivity', 'lang',\n",
       "       'fav_count', 'retweet_count', 'screen_name', 'follower_count',\n",
       "       'friends_count', 'sensitivity', 'hashtags', 'mentions', 'location'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# columns\n",
    "dataset.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "80639d0f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at         object\n",
       "source             object\n",
       "text               object\n",
       "polarity          float64\n",
       "subjectivity      float64\n",
       "lang               object\n",
       "fav_count           int64\n",
       "retweet_count       int64\n",
       "screen_name        object\n",
       "follower_count      int64\n",
       "friends_count       int64\n",
       "sensitivity          bool\n",
       "hashtags           object\n",
       "mentions           object\n",
       "location           object\n",
       "dtype: object"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# datatypes\n",
    "dataset.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fe420222",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "created_at            0\n",
       "source                0\n",
       "text                  0\n",
       "polarity              0\n",
       "subjectivity          0\n",
       "lang                  0\n",
       "fav_count             0\n",
       "retweet_count         0\n",
       "screen_name        6548\n",
       "follower_count        0\n",
       "friends_count         0\n",
       "sensitivity           0\n",
       "hashtags              0\n",
       "mentions              0\n",
       "location          15346\n",
       "dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking for null values in data\n",
    "dataset.isnull().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ecda245f",
   "metadata": {},
   "source": [
    "# Task\n",
    "+ Text\n",
    "  - Text preprocessing\n",
    "  - Sentiment Analysis\n",
    "  - Keyword Extraction\n",
    "  - Entity Extraction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "82c3dc04",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{' IndiaTodayFLASH',\n",
       " '24liveblog',\n",
       " 'Adobe Creative Cloud Express',\n",
       " 'Agorapulse app',\n",
       " 'All India Tweet',\n",
       " 'Botbird tweets',\n",
       " 'Buffer',\n",
       " 'Cloze Relationship Management',\n",
       " 'Energy Fuels Autopilot',\n",
       " 'Everlytic',\n",
       " 'FMG Social',\n",
       " 'Goodreturns Hindi',\n",
       " 'Goodreturns Kannada',\n",
       " 'Hocalwire Social Share',\n",
       " 'Hootsuite Inc.',\n",
       " 'IFTTT',\n",
       " 'Instagram',\n",
       " 'IrelandFuelBot',\n",
       " 'LaterMedia',\n",
       " 'LinkedIn',\n",
       " 'Locobuzz CX',\n",
       " 'Loomly',\n",
       " 'Mailchimp',\n",
       " 'Meltwater Social',\n",
       " 'Microsoft Power Platform',\n",
       " 'Oneindia Gujarat',\n",
       " 'Oneindia Malayalam',\n",
       " 'Oneindia News Eng',\n",
       " 'Oneindia Video Upload',\n",
       " 'PEtwitpix',\n",
       " 'Paper.li',\n",
       " 'Periscope',\n",
       " 'PickAPump',\n",
       " 'Postly-Fast Content Scheduler',\n",
       " 'SocapRetweeted',\n",
       " 'Spreaker',\n",
       " 'Sprout Social',\n",
       " 'Tamilstoday',\n",
       " 'The Social Jukebox',\n",
       " 'The contester',\n",
       " 'Tweepsmap',\n",
       " 'TweetDeck',\n",
       " 'Tweets Watch',\n",
       " 'Twitter Media Studio',\n",
       " 'Twitter Media Studio - LiveCut',\n",
       " 'Twitter Web App',\n",
       " 'Twitter Web Client',\n",
       " 'Twitter for Android',\n",
       " 'Twitter for iPad',\n",
       " 'Twitter for iPhone',\n",
       " 'VictorsRetweetBot',\n",
       " 'WordPress.com',\n",
       " 'Zoho Social',\n",
       " 'boink meme',\n",
       " 'bot_test_rasp',\n",
       " 'current news ',\n",
       " 'dlvr.it',\n",
       " 'domicilefixe-dev2',\n",
       " 'econotw',\n",
       " 'fllwrs',\n",
       " 'kornflex6-dev',\n",
       " 'lnx621-app-dev2',\n",
       " 'naalikeram',\n",
       " 'pumpsie_bot',\n",
       " 'thatsmalayalam videos',\n",
       " 'tweeter_biases'}"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# devices with these tweets \n",
    "set(dataset['source'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b99781d2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Twitter for Android              10804\n",
       "Twitter for iPhone                5375\n",
       "Twitter Web App                   5114\n",
       "Twitter for iPad                   597\n",
       "TweetDeck                          270\n",
       "                                 ...  \n",
       "24liveblog                           1\n",
       "Loomly                               1\n",
       "IFTTT                                1\n",
       "Tweepsmap                            1\n",
       "Postly-Fast Content Scheduler        1\n",
       "Name: source, Length: 66, dtype: int64"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# count of tweets per devices\n",
    "dataset['source'].value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "2fba918e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AxesSubplot:>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plot the top 10 sources\n",
    "dataset['source'].value_counts()[:10].plot(kind='bar')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
